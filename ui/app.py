import os, sys
import streamlit as st

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from backend.dedupe import find_duplicate_groups
from backend.archive import get_photos_by_date, organize_photos, MONTH_NAMES

import pyperclip

st.set_page_config(page_title="–§–æ—Ç–æ–∞—Ä—Ö–∏–≤365 Light")
st.title("–§–æ—Ç–æ–∞—Ä—Ö–∏–≤365 Light")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É
if 'folder' not in st.session_state:
    st.session_state.folder = os.getcwd()

st.write("**–¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞:**")
st.code(st.session_state.folder, language='bash')

# –ö–Ω–æ–ø–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ –ø—É—Ç–∏ –∏–∑ –±—É—Ñ–µ—Ä–∞
if st.button("üìã –í—Å—Ç–∞–≤–∏—Ç—å –ø—É—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞"):
    clip = pyperclip.paste().strip().strip('"').strip("'")
    if os.path.isdir(clip):
        st.session_state.folder = clip
    else:
        st.error(f"–í –±—É—Ñ–µ—Ä–µ –Ω–µ –ø–∞–ø–∫–∞: {clip}")

# –ö–Ω–æ–ø–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
if st.button("üîç –ê–Ω–∞–ª–∏–∑"):
    folder = st.session_state.folder
    st.session_state.dupe = find_duplicate_groups(folder, threshold=0)
    st.session_state.archive = get_photos_by_date(folder)
    st.session_state.to_delete = set()

# –†–∞–∑–¥–µ–ª ¬´–î—É–±–ª–∏–∫–∞—Ç—ã¬ª
if st.session_state.get('dupe'):
    st.header("–î—É–±–ª–∏–∫–∞—Ç—ã")
    for i, cluster in enumerate(st.session_state.dupe.values(), start=1):
        with st.expander(f"–î—É–±–ª–∏–∫–∞—Ç—ã ‚Ññ{i} ‚Äî {len(cluster)} —Ñ–æ—Ç–æ", expanded=False):
            st.image(cluster[0], width=300, caption=os.path.basename(cluster[0]))
            rest = cluster[1:]
            if rest:
                cols = st.columns(len(rest))
                for idx, path in enumerate(rest):
                    with cols[idx]:
                        st.image(path, width=150, caption=os.path.basename(path))
            if st.button(f"–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥—É–±–ª–∏–∫–∞—Ç—ã ‚Ññ{i}", key=f"del_all_{i}"):
                removed = 0
                for p in rest:
                    os.remove(p)
                    removed += 1
                st.success(f"–£–¥–∞–ª–µ–Ω–æ {removed} —Ñ–∞–π–ª–æ–≤")
                key = list(st.session_state.dupe.keys())[i-1]
                st.session_state.dupe.pop(key)

# –†–∞–∑–¥–µ–ª ¬´–ê—Ä—Ö–∏–≤ –ø–æ –¥–∞—Ç–µ¬ª
if st.session_state.get('archive'):
    st.header("–ê—Ä—Ö–∏–≤ –ø–æ –¥–∞—Ç–µ")
    if st.button("üìÅ –°–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã –ø–æ –ø–∞–ø–∫–∞–º"):
        organize_photos(st.session_state.folder)
        st.success("–§–∞–π–ª—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ –ø–∞–ø–∫–∏ –ì–æ–¥/–ú–µ—Å—è—Ü")
    for year in sorted(st.session_state.archive.keys(), reverse=True):
        with st.expander(f"{year}", expanded=False):
            for month_num in sorted(st.session_state.archive[year].keys()):
                month_name = MONTH_NAMES.get(month_num, month_num)
                st.subheader(month_name)
                photos = st.session_state.archive[year][month_num]
                cols = st.columns(4)
                for j, path in enumerate(photos):
                    with cols[j % 4]:
                        st.image(path, width=150)
                        st.caption(os.path.basename(path)) 